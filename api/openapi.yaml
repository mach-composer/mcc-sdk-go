openapi: 3.0.3
info:
  contact:
    email: mach@labdigital.nl
    name: MACH Composer Support
    url: https://docs.machcomposer.io/
  description: |-
    # Introduction

    MACH composer Cloud is a platform and API to facilitate and coordinate work
    across teams that build composable architectures using MACH technology.

    All operations available in MACH composer cloud are available through this
    API. For more information about using it in your MACH architecture, have a
    look at the [documentation website](https://docs.machcomposer.io/cloud/index.html).
  license:
    name: Private
    url: https://www.labdigital.nl/general-terms-and-conditions/
  termsOfService: https://www.labdigital.nl/general-terms-and-conditions/
  title: MACH composer Cloud (MCC) Public API
  version: 0.1.0
  x-logo:
    url: https://docs.machcomposer.io/_img/logo.png
    altText: MACH Composer Cloud
servers:
- description: Live environment
  url: https://api.mach.cloud
security:
- oauth2:
  - api-client:read
  - api-client:write
  - component:read
  - component:write
  - component-version:write
paths:
  /account/me:
    get:
      description: Return user information from current user
      operationId: MyAccountInformation
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUserPaginator'
          description: User information
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Get user information
      tags:
      - My Account
    post:
      operationId: UserCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUserDraft'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUser'
          description: New user
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Create new user
      tags:
      - My Account
  /account/me/{id}:
    delete:
      operationId: UserDelete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: User deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Delete user
      tags:
      - My Account
    get:
      operationId: UserGet
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUser'
          description: User information
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Get user information
      tags:
      - My Account
    patch:
      operationId: UserPatch
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationUserDraft'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUser'
          description: Updated user
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Update user information
      tags:
      - My Account
    put:
      operationId: UserUpdate
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUserDraft'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUser'
          description: Updated user
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Update user information
      tags:
      - My Account
  /organizations:
    get:
      description: Return a list of all organizations
      operationId: OrganizationQuery
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationPaginator'
          description: List of organizations
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
      summary: List all organizations
      tags:
      - Organization Management
    post:
      operationId: OrganizationCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationDraft'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: New organization
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
      summary: Create new organization
      tags:
      - Organization Management
  /organizations/{organization}:
    delete:
      operationId: OrganizationDelete
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Organization deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
      summary: Delete an organization
      tags:
      - Organization Management
    get:
      operationId: OrganizationGet
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Organization
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
      summary: Get organization details
      tags:
      - Organization Management
    patch:
      description: Update the details of an existing organization
      operationId: OrganizationPatch
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationDraft'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Updated organization
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
      summary: Update an organization
      tags:
      - Organization Management
    put:
      operationId: OrganizationUpdate
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationDraft'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Updated organization
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
      summary: Update an organization
      tags:
      - Organization Management
  /organizations/{organization}/projects:
    get:
      operationId: ProjectQuery
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectPaginator'
          description: List of projects
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
      summary: List all projects in an organization
      tags:
      - Organization Management
    post:
      operationId: ProjectCreate
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectDraft'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: New project
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
      summary: Create new project in an organization
      tags:
      - Organization Management
  /organizations/{organization}/projects/{project}:
    delete:
      description: This action will delete the project and all related resources
      operationId: ProjectDelete
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Project deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
      summary: Delete a project
      tags:
      - Organization Management
    get:
      operationId: ProjectGet
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Project
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
      summary: Get project details
      tags:
      - Organization Management
    patch:
      operationId: ProjectPatch
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectDraft'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Updated project
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
      summary: Update a project
      tags:
      - Organization Management
    put:
      operationId: ProjectUpdate
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectDraft'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Updated project
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
      summary: Update a project
      tags:
      - Organization Management
  /organizations/{organization}/projects/{project}/api-clients:
    get:
      operationId: ApiClientQuery
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientPaginator'
          description: List of API Clients
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: List all API Clients
      tags:
      - API Clients
    post:
      operationId: ApiClientCreate
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiClientDraft'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClient'
          description: New API Client
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Create new API Client
      tags:
      - API Clients
  /organizations/{organization}/projects/{project}/api-clients/{id}:
    delete:
      operationId: ApiClientDelete
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: API Client deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Delete API Client
      tags:
      - API Clients
    get:
      operationId: ApiClientGet
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClient'
          description: API Client
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Get API Client details
      tags:
      - API Clients
    patch:
      operationId: ApiClientPatch
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedApiClientDraft'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClient'
          description: Updated API Client
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Update API Client
      tags:
      - API Clients
    put:
      operationId: ApiClientUpdate
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiClientDraft'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClient'
          description: Updated API Client
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Update API Client
      tags:
      - API Clients
  /organizations/{organization}/projects/{project}/components:
    get:
      operationId: ComponentQuery
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentPaginator'
          description: List of components
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: List all components
      tags:
      - Components
    post:
      operationId: ComponentCreate
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentDraft'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: New component
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Create component
      tags:
      - Components
  /organizations/{organization}/projects/{project}/components/{component}:
    delete:
      description: This action will delete the component and all versions.
      operationId: ComponentDelete
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: component
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Component deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
      summary: Delete a component
      tags:
      - Components
    get:
      operationId: ComponentGet
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: component
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: Component
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Get component details
      tags:
      - Components
    patch:
      operationId: ComponentPatch
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: component
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComponentDraft'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: Updated component
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
      summary: Patch an existing component
      tags:
      - Components
    put:
      operationId: ComponentUpdate
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: component
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentDraft'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: Updated component
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
      summary: Update a component
      tags:
      - Components
  /organizations/{organization}/projects/{project}/components/{component}/commits:
    get:
      operationId: ComponentCommitQuery
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: component
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitDataPaginator'
          description: List of commits
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: "List all commits of a component between two versions ordered by creation\
        \ date. If `to` is not provided, it will list all commits from `from` to the\
        \ latest version."
      tags:
      - Components
  /organizations/{organization}/projects/{project}/components/{component}/latest:
    get:
      operationId: ComponentLatestVersion
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: component
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: branch
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentVersion'
          description: Last component version
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Get last component version
      tags:
      - Components
  /organizations/{organization}/projects/{project}/components/{component}/versions:
    get:
      operationId: ComponentVersionQuery
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: component
        required: true
        schema:
          type: string
        style: simple
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentVersionPaginator'
          description: List of component versions
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: List all versions of a component
      tags:
      - Components
    post:
      operationId: ComponentVersionCreate
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: component
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentVersionDraft'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentVersion'
          description: New component version
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
      summary: Create component version
      tags:
      - Components
  /organizations/{organization}/projects/{project}/components/{component}/versions/{version}:
    delete:
      operationId: ComponentVersionDelete
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: component
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Component version deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Delete component version
      tags:
      - Components
    get:
      operationId: ComponentVersionGet
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: component
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentVersion'
          description: Component version
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Get component version
      tags:
      - Components
    patch:
      operationId: ComponentVersionPatch
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: component
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComponentVersionDraft'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentVersion'
          description: Updated component version
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Patch component version
      tags:
      - Components
    put:
      operationId: ComponentVersionUpdate
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: component
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentVersionDraft'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentVersion'
          description: Updated component version
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Update component version
      tags:
      - Components
  /organizations/{organization}/projects/{project}/components/{component}/versions/{version}/commits:
    get:
      operationId: ComponentVersionQueryCommits
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: component
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitDataPaginator'
          description: List of commits
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Get commits for this component version
      tags:
      - Components
    post:
      description: Add new commits to the specified component version
      operationId: ComponentVersionPushCommits
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: component
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentCommitCreateDraft'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitDataPaginator'
          description: New commit
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Push commits for this component version
      tags:
      - Components
  /organizations/{organization}/projects/{project}/components/{component}/versions/{version}/commits/{commit}:
    delete:
      operationId: ComponentVersionDeleteCommit
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: component
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: commit
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Commit deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Delete commit
      tags:
      - Components
    get:
      operationId: ComponentVersionGetCommit
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: component
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: commit
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitData'
          description: Commit
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Get commit details
      tags:
      - Components
    patch:
      operationId: ComponentVersionPatchCommit
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: component
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: commit
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCommitDataDraft'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitData'
          description: Updated commit
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Patch commit
      tags:
      - Components
    put:
      operationId: ComponentVersionUpdateCommit
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: component
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: commit
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitDataDraft'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitData'
          description: Updated commit
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Update commit
      tags:
      - Components
  /organizations/{organization}/users/invite:
    get:
      operationId: OrganizationUserQuery
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUserPaginator'
          description: List of users
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: List all users in an organization
      tags:
      - Organization Management
    post:
      operationId: OrganizationUserInvite
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInviteDraft'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUser'
          description: Invite sent
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Invite a user to the organization
      tags:
      - Organization Management
  /organizations/{organization}/users/invite/{id}:
    delete:
      operationId: OrganizationUserInviteDelete
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Invite canceled
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Cancel an invite
      tags:
      - Organization Management
    get:
      operationId: OrganizationUserInviteView
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUser'
          description: Invite details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: View invite information
      tags:
      - Organization Management
    patch:
      operationId: OrganizationUserInvitePatch
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserInviteDraft'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUser'
          description: Invite accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Accept or reject an invite
      tags:
      - Organization Management
    put:
      operationId: OrganizationUserInviteUpdate
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInviteDraft'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUser'
          description: Invite accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Accept or reject an invite
      tags:
      - Organization Management
components:
  schemas:
    ApiClient:
      example:
        last_used_at: 2000-01-23T04:56:07.000+00:00
        scope:
        - organization:owner
        - organization:owner
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        id: 5
        client_secret: client_secret
        client_id: client_id
      properties:
        id:
          readOnly: true
          type: integer
        created_at:
          format: date-time
          readOnly: true
          type: string
        name:
          maxLength: 255
          type: string
        client_id:
          maxLength: 100
          type: string
        client_secret:
          description: Hashed on Save. Copy it now if this is a new secret.
          maxLength: 255
          type: string
        scope:
          items:
            description: |-
              * `organization:owner` - Organization Owner
              * `organization:create` - Organization Create
              * `organization:read` - Organization Read
              * `organization:manage` - Organization Manage
              * `api-client:read` - Api Client Read
              * `api-client:manage` - Api Client Manage
              * `component:read` - Component Read
              * `component:manage` - Component Manage
              * `project:read` - Project Read
              * `project:manage` - Project Manage
              * `site:read` - Site Read
              * `site:manage` - Site Manage
              * `site-component:read` - Site Component Read
              * `site-component:manage` - Site Component Manage
              * `user:read` - User Read
              * `user:manage` - User Manage
              * `user:invite` - User Invite
            enum:
            - organization:owner
            - organization:create
            - organization:read
            - organization:manage
            - api-client:read
            - api-client:manage
            - component:read
            - component:manage
            - project:read
            - project:manage
            - site:read
            - site:manage
            - site-component:read
            - site-component:manage
            - user:read
            - user:manage
            - user:invite
            type: string
            x-spec-enum-id: 8bc2bb6e18bcd46f
          type: array
        description:
          type: string
        last_used_at:
          format: date-time
          nullable: true
          type: string
      required:
      - created_at
      - id
      type: object
    ApiClientDraft:
      example:
        last_used_at: 2000-01-23T04:56:07.000+00:00
        scope:
        - organization:owner
        - organization:owner
        name: name
        description: description
        client_secret: client_secret
        client_id: client_id
      properties:
        name:
          maxLength: 255
          type: string
        client_id:
          maxLength: 100
          minLength: 1
          type: string
        client_secret:
          description: Hashed on Save. Copy it now if this is a new secret.
          maxLength: 255
          type: string
        scope:
          items:
            description: |-
              * `organization:owner` - Organization Owner
              * `organization:create` - Organization Create
              * `organization:read` - Organization Read
              * `organization:manage` - Organization Manage
              * `api-client:read` - Api Client Read
              * `api-client:manage` - Api Client Manage
              * `component:read` - Component Read
              * `component:manage` - Component Manage
              * `project:read` - Project Read
              * `project:manage` - Project Manage
              * `site:read` - Site Read
              * `site:manage` - Site Manage
              * `site-component:read` - Site Component Read
              * `site-component:manage` - Site Component Manage
              * `user:read` - User Read
              * `user:manage` - User Manage
              * `user:invite` - User Invite
            enum:
            - organization:owner
            - organization:create
            - organization:read
            - organization:manage
            - api-client:read
            - api-client:manage
            - component:read
            - component:manage
            - project:read
            - project:manage
            - site:read
            - site:manage
            - site-component:read
            - site-component:manage
            - user:read
            - user:manage
            - user:invite
            type: string
            x-spec-enum-id: 8bc2bb6e18bcd46f
          type: array
        description:
          type: string
        last_used_at:
          format: date-time
          nullable: true
          type: string
      type: object
    ApiClientPaginator:
      example:
        total: 6
        offset: 1
        count: 0
        limit: 5
        results:
        - last_used_at: 2000-01-23T04:56:07.000+00:00
          scope:
          - organization:owner
          - organization:owner
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 5
          client_secret: client_secret
          client_id: client_id
        - last_used_at: 2000-01-23T04:56:07.000+00:00
          scope:
          - organization:owner
          - organization:owner
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 5
          client_secret: client_secret
          client_id: client_id
      properties:
        count:
          description: Number of items in the current page
          type: integer
        total:
          description: Total number of items found
          format: int64
          type: integer
        offset:
          default: 0
          type: integer
        limit:
          default: 10
          type: integer
        results:
          items:
            $ref: '#/components/schemas/ApiClient'
          type: array
      type: object
    CommitAuthorDraft:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        name: name
        email: email
      properties:
        name:
          minLength: 1
          type: string
        email:
          minLength: 1
          type: string
        date:
          format: date-time
          type: string
      required:
      - date
      - email
      - name
      type: object
    CommitData:
      example:
        committer:
          date: 2000-01-23T04:56:07.000+00:00
          name: name
          email: email
        subject: subject
        author:
          date: 2000-01-23T04:56:07.000+00:00
          name: name
          email: email
        commit: commit
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        parents:
        - parents
        - parents
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        subject:
          type: string
        commit:
          maxLength: 100
          type: string
        parents:
          items:
            maxLength: 100
            type: string
          type: array
        author:
          $ref: '#/components/schemas/CommitDataAuthor'
        committer:
          $ref: '#/components/schemas/CommitDataAuthor'
      required:
      - author
      - commit
      - committer
      - created_at
      - id
      - subject
      type: object
    CommitDataAuthor:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        name: name
        email: email
      properties:
        name:
          type: string
        email:
          format: email
          type: string
        date:
          format: date-time
          type: string
      required:
      - date
      - email
      - name
      type: object
    CommitDataAuthorDraft:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        name: name
        email: email
      properties:
        name:
          minLength: 1
          type: string
        email:
          format: email
          minLength: 1
          type: string
        date:
          format: date-time
          type: string
      required:
      - date
      - email
      - name
      type: object
    CommitDataDraft:
      example:
        committer:
          date: 2000-01-23T04:56:07.000+00:00
          name: name
          email: email
        subject: subject
        author:
          date: 2000-01-23T04:56:07.000+00:00
          name: name
          email: email
        commit: commit
        parents:
        - parents
        - parents
      properties:
        subject:
          minLength: 1
          type: string
        commit:
          maxLength: 100
          minLength: 1
          type: string
        parents:
          items:
            maxLength: 100
            minLength: 1
            type: string
          type: array
        author:
          $ref: '#/components/schemas/CommitDataAuthorDraft'
        committer:
          $ref: '#/components/schemas/CommitDataAuthorDraft'
      required:
      - author
      - commit
      - committer
      - subject
      type: object
    CommitDataPaginator:
      example:
        total: 6
        offset: 1
        count: 0
        limit: 5
        results:
        - committer:
            date: 2000-01-23T04:56:07.000+00:00
            name: name
            email: email
          subject: subject
          author:
            date: 2000-01-23T04:56:07.000+00:00
            name: name
            email: email
          commit: commit
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          parents:
          - parents
          - parents
        - committer:
            date: 2000-01-23T04:56:07.000+00:00
            name: name
            email: email
          subject: subject
          author:
            date: 2000-01-23T04:56:07.000+00:00
            name: name
            email: email
          commit: commit
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          parents:
          - parents
          - parents
      properties:
        count:
          description: Number of items in the current page
          type: integer
        total:
          description: Total number of items found
          format: int64
          type: integer
        offset:
          default: 0
          type: integer
        limit:
          default: 10
          type: integer
        results:
          items:
            $ref: '#/components/schemas/CommitData'
          type: array
      type: object
    CommitDraft:
      example:
        committer:
          date: 2000-01-23T04:56:07.000+00:00
          name: name
          email: email
        author:
          date: 2000-01-23T04:56:07.000+00:00
          name: name
          email: email
        subject: subject
        commit: commit
        parents:
        - parents
        - parents
      properties:
        author:
          $ref: '#/components/schemas/CommitAuthorDraft'
        committer:
          $ref: '#/components/schemas/CommitAuthorDraft'
        commit:
          maxLength: 100
          minLength: 1
          type: string
        parents:
          items:
            maxLength: 100
            minLength: 1
            type: string
          type: array
        subject:
          minLength: 1
          type: string
      required:
      - author
      - commit
      - committer
      - parents
      - subject
      type: object
    Component:
      example:
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        key: key
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        key:
          description: The component key (must be unique)
          maxLength: 100
          type: string
        name:
          description: The name of the component
          maxLength: 100
          type: string
        description:
          description: The description of the component
          type: string
      required:
      - created_at
      - id
      - key
      - name
      type: object
    ComponentCommitCreateDraft:
      example:
        commits:
        - committer:
            date: 2000-01-23T04:56:07.000+00:00
            name: name
            email: email
          author:
            date: 2000-01-23T04:56:07.000+00:00
            name: name
            email: email
          subject: subject
          commit: commit
          parents:
          - parents
          - parents
        - committer:
            date: 2000-01-23T04:56:07.000+00:00
            name: name
            email: email
          author:
            date: 2000-01-23T04:56:07.000+00:00
            name: name
            email: email
          subject: subject
          commit: commit
          parents:
          - parents
          - parents
      properties:
        commits:
          items:
            $ref: '#/components/schemas/CommitDraft'
          type: array
      type: object
    ComponentDraft:
      example:
        name: name
        description: description
        key: key
      properties:
        key:
          description: The component key (must be unique)
          maxLength: 100
          minLength: 1
          type: string
        name:
          description: The name of the component
          maxLength: 100
          minLength: 1
          type: string
        description:
          description: The description of the component
          type: string
      required:
      - key
      - name
      type: object
    ComponentPaginator:
      example:
        total: 6
        offset: 1
        count: 0
        limit: 5
        results:
        - name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          key: key
        - name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          key: key
      properties:
        count:
          description: Number of items in the current page
          type: integer
        total:
          description: Total number of items found
          format: int64
          type: integer
        offset:
          default: 0
          type: integer
        limit:
          default: 10
          type: integer
        results:
          items:
            $ref: '#/components/schemas/Component'
          type: array
      type: object
    ComponentVersion:
      example:
        component: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        version: version
        branch: branch
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        component:
          description: key of the component
          format: uuid
          readOnly: true
          type: string
        version:
          description: version of the component
          maxLength: 100
          type: string
        branch:
          description: branch of the version
          maxLength: 500
          type: string
      required:
      - component
      - created_at
      - id
      - version
      type: object
    ComponentVersionDraft:
      example:
        version: version
        branch: branch
      properties:
        version:
          description: version of the component
          maxLength: 100
          minLength: 1
          type: string
        branch:
          description: branch of the version
          maxLength: 500
          minLength: 1
          type: string
      required:
      - version
      type: object
    ComponentVersionPaginator:
      example:
        total: 6
        offset: 1
        count: 0
        limit: 5
        results:
        - component: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          version: version
          branch: branch
        - component: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          version: version
          branch: branch
      properties:
        count:
          description: Number of items in the current page
          type: integer
        total:
          description: Total number of items found
          format: int64
          type: integer
        offset:
          default: 0
          type: integer
        limit:
          default: 10
          type: integer
        results:
          items:
            $ref: '#/components/schemas/ComponentVersion'
          type: array
      type: object
    Error:
      example:
        summary: summary
        description: description
        errors:
        - code: code
          message: message
        - code: code
          message: message
        status: 5
      properties:
        status:
          type: integer
        summary:
          type: string
        description:
          type: string
        errors:
          items:
            $ref: '#/components/schemas/ErrorObject'
          type: array
      required:
      - status
      - summary
      type: object
    ErrorForbidden:
      description: Forbidden
      example:
        summary: summary
        description: description
        message: message
        status: 2
      properties:
        status:
          type: integer
        summary:
          type: string
        description:
          type: string
        message:
          type: string
      type: object
    ErrorObject:
      example:
        code: code
        message: message
      properties:
        code:
          type: string
        message:
          type: string
      required:
      - code
      - message
      type: object
    ErrorUnauthorized:
      description: Unauthorized
      example:
        message: message
      properties:
        message:
          type: string
      type: object
    Organization:
      example:
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        key: key
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        key:
          description: The organization key (must be unique)
          maxLength: 100
          type: string
        name:
          description: The name of the organization
          maxLength: 100
          type: string
      required:
      - created_at
      - id
      - key
      - name
      type: object
    OrganizationDraft:
      example:
        name: name
        key: key
      properties:
        key:
          description: The organization key (must be unique)
          maxLength: 100
          minLength: 1
          type: string
        name:
          description: The name of the organization
          maxLength: 100
          minLength: 1
          type: string
      required:
      - key
      - name
      type: object
    OrganizationPaginator:
      example:
        total: 6
        offset: 1
        count: 0
        limit: 5
        results:
        - name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          key: key
        - name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          key: key
      properties:
        count:
          description: Number of items in the current page
          type: integer
        total:
          description: Total number of items found
          format: int64
          type: integer
        offset:
          default: 0
          type: integer
        limit:
          default: 10
          type: integer
        results:
          items:
            $ref: '#/components/schemas/Organization'
          type: array
      type: object
    OrganizationUser:
      example:
        is_active: true
        is_superuser: true
        projects:
        - name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          key: key
        - name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          key: key
        avatar_url: avatar_url
        is_staff: true
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        account_status: account_status
        email: email
        last_modified_at: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        last_modified_at:
          format: date-time
          readOnly: true
          type: string
        account_status:
          maxLength: 100
          type: string
        name:
          maxLength: 100
          type: string
        email:
          format: email
          maxLength: 254
          type: string
        avatar_url:
          maxLength: 256
          type: string
        is_active:
          type: boolean
        is_staff:
          type: boolean
        is_superuser:
          type: boolean
        projects:
          items:
            $ref: '#/components/schemas/Project'
          readOnly: true
          type: array
      required:
      - account_status
      - created_at
      - email
      - id
      - last_modified_at
      - name
      - projects
      type: object
    OrganizationUserDraft:
      example:
        is_active: true
        is_superuser: true
        avatar_url: avatar_url
        is_staff: true
        name: name
        account_status: account_status
        email: email
      properties:
        account_status:
          maxLength: 100
          minLength: 1
          type: string
        name:
          maxLength: 100
          minLength: 1
          type: string
        email:
          format: email
          maxLength: 254
          minLength: 1
          type: string
        avatar_url:
          maxLength: 256
          minLength: 1
          type: string
        is_active:
          type: boolean
        is_staff:
          type: boolean
        is_superuser:
          type: boolean
      required:
      - account_status
      - email
      - name
      type: object
    OrganizationUserPaginator:
      example:
        total: 6
        offset: 1
        count: 0
        limit: 5
        results:
        - is_active: true
          is_superuser: true
          projects:
          - name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            description: description
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            key: key
          - name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            description: description
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            key: key
          avatar_url: avatar_url
          is_staff: true
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          account_status: account_status
          email: email
          last_modified_at: 2000-01-23T04:56:07.000+00:00
        - is_active: true
          is_superuser: true
          projects:
          - name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            description: description
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            key: key
          - name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            description: description
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            key: key
          avatar_url: avatar_url
          is_staff: true
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          account_status: account_status
          email: email
          last_modified_at: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          description: Number of items in the current page
          type: integer
        total:
          description: Total number of items found
          format: int64
          type: integer
        offset:
          default: 0
          type: integer
        limit:
          default: 10
          type: integer
        results:
          items:
            $ref: '#/components/schemas/OrganizationUser'
          type: array
      type: object
    PatchedApiClientDraft:
      example:
        last_used_at: 2000-01-23T04:56:07.000+00:00
        scope:
        - organization:owner
        - organization:owner
        name: name
        description: description
        client_secret: client_secret
        client_id: client_id
      properties:
        name:
          maxLength: 255
          type: string
        client_id:
          maxLength: 100
          minLength: 1
          type: string
        client_secret:
          description: Hashed on Save. Copy it now if this is a new secret.
          maxLength: 255
          type: string
        scope:
          items:
            description: |-
              * `organization:owner` - Organization Owner
              * `organization:create` - Organization Create
              * `organization:read` - Organization Read
              * `organization:manage` - Organization Manage
              * `api-client:read` - Api Client Read
              * `api-client:manage` - Api Client Manage
              * `component:read` - Component Read
              * `component:manage` - Component Manage
              * `project:read` - Project Read
              * `project:manage` - Project Manage
              * `site:read` - Site Read
              * `site:manage` - Site Manage
              * `site-component:read` - Site Component Read
              * `site-component:manage` - Site Component Manage
              * `user:read` - User Read
              * `user:manage` - User Manage
              * `user:invite` - User Invite
            enum:
            - organization:owner
            - organization:create
            - organization:read
            - organization:manage
            - api-client:read
            - api-client:manage
            - component:read
            - component:manage
            - project:read
            - project:manage
            - site:read
            - site:manage
            - site-component:read
            - site-component:manage
            - user:read
            - user:manage
            - user:invite
            type: string
            x-spec-enum-id: 8bc2bb6e18bcd46f
          type: array
        description:
          type: string
        last_used_at:
          format: date-time
          nullable: true
          type: string
      type: object
    PatchedCommitDataDraft:
      example:
        committer:
          date: 2000-01-23T04:56:07.000+00:00
          name: name
          email: email
        subject: subject
        author:
          date: 2000-01-23T04:56:07.000+00:00
          name: name
          email: email
        commit: commit
        parents:
        - parents
        - parents
      properties:
        subject:
          minLength: 1
          type: string
        commit:
          maxLength: 100
          minLength: 1
          type: string
        parents:
          items:
            maxLength: 100
            minLength: 1
            type: string
          type: array
        author:
          $ref: '#/components/schemas/CommitDataAuthorDraft'
        committer:
          $ref: '#/components/schemas/CommitDataAuthorDraft'
      type: object
    PatchedComponentDraft:
      example:
        name: name
        description: description
        key: key
      properties:
        key:
          description: The component key (must be unique)
          maxLength: 100
          minLength: 1
          type: string
        name:
          description: The name of the component
          maxLength: 100
          minLength: 1
          type: string
        description:
          description: The description of the component
          type: string
      type: object
    PatchedComponentVersionDraft:
      example:
        version: version
        branch: branch
      properties:
        version:
          description: version of the component
          maxLength: 100
          minLength: 1
          type: string
        branch:
          description: branch of the version
          maxLength: 500
          minLength: 1
          type: string
      type: object
    PatchedOrganizationDraft:
      example:
        name: name
        key: key
      properties:
        key:
          description: The organization key (must be unique)
          maxLength: 100
          minLength: 1
          type: string
        name:
          description: The name of the organization
          maxLength: 100
          minLength: 1
          type: string
      type: object
    PatchedOrganizationUserDraft:
      example:
        is_active: true
        is_superuser: true
        avatar_url: avatar_url
        is_staff: true
        name: name
        account_status: account_status
        email: email
      properties:
        account_status:
          maxLength: 100
          minLength: 1
          type: string
        name:
          maxLength: 100
          minLength: 1
          type: string
        email:
          format: email
          maxLength: 254
          minLength: 1
          type: string
        avatar_url:
          maxLength: 256
          minLength: 1
          type: string
        is_active:
          type: boolean
        is_staff:
          type: boolean
        is_superuser:
          type: boolean
      type: object
    PatchedProjectDraft:
      example:
        name: name
        description: description
        key: key
      properties:
        key:
          description: The project key (must be unique)
          maxLength: 100
          minLength: 1
          type: string
        name:
          description: The name of the project
          maxLength: 100
          minLength: 1
          type: string
        description:
          description: The description of the project
          type: string
      type: object
    PatchedUserInviteDraft:
      example:
        role: role
        organization: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        project: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        accepted_at: 2000-01-23T04:56:07.000+00:00
        created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        email: email
      properties:
        accepted_at:
          format: date-time
          nullable: true
          type: string
        created_by:
          format: uuid
          type: string
        email:
          format: email
          maxLength: 254
          minLength: 1
          type: string
        organization:
          format: uuid
          type: string
        project:
          format: uuid
          nullable: true
          type: string
        role:
          maxLength: 100
          minLength: 1
          type: string
      type: object
    Project:
      example:
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        key: key
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        key:
          description: The project key (must be unique)
          maxLength: 100
          type: string
        name:
          description: The name of the project
          maxLength: 100
          type: string
        description:
          description: The description of the project
          type: string
      required:
      - created_at
      - id
      - key
      - name
      type: object
    ProjectDraft:
      example:
        name: name
        description: description
        key: key
      properties:
        key:
          description: The project key (must be unique)
          maxLength: 100
          minLength: 1
          type: string
        name:
          description: The name of the project
          maxLength: 100
          minLength: 1
          type: string
        description:
          description: The description of the project
          type: string
      required:
      - key
      - name
      type: object
    ProjectPaginator:
      example:
        total: 6
        offset: 1
        count: 0
        limit: 5
        results:
        - name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          key: key
        - name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          key: key
      properties:
        count:
          description: Number of items in the current page
          type: integer
        total:
          description: Total number of items found
          format: int64
          type: integer
        offset:
          default: 0
          type: integer
        limit:
          default: 10
          type: integer
        results:
          items:
            $ref: '#/components/schemas/Project'
          type: array
      type: object
    UserInviteDraft:
      example:
        role: role
        organization: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        project: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        accepted_at: 2000-01-23T04:56:07.000+00:00
        created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        email: email
      properties:
        accepted_at:
          format: date-time
          nullable: true
          type: string
        created_by:
          format: uuid
          type: string
        email:
          format: email
          maxLength: 254
          minLength: 1
          type: string
        organization:
          format: uuid
          type: string
        project:
          format: uuid
          nullable: true
          type: string
        role:
          maxLength: 100
          minLength: 1
          type: string
      required:
      - created_by
      - email
      - organization
      - role
      type: object
  securitySchemes:
    cookieAuth:
      in: cookie
      name: sessionid
      type: apiKey
    oauth2:
      flows: {}
      type: oauth2
