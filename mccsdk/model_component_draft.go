/*
MACH composer Cloud (MCC) Public API

# Introduction  MACH composer Cloud is a platform and API to facilitate and coordinate work across teams that build composable architectures using MACH technology.   All operations available in MACH composer cloud are available through this API. For more information about using it in your MACH architecture, have a look at the [documentation website](https://docs.machcomposer.io/cloud/index.html).

API version: 0.1.0
Contact: mach@labdigital.nl
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mccsdk

import (
	"encoding/json"
)

// ComponentDraft struct for ComponentDraft
type ComponentDraft struct {
	Key string `json:"key"`
}

// NewComponentDraft instantiates a new ComponentDraft object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComponentDraft(key string) *ComponentDraft {
	this := ComponentDraft{}
	this.Key = key
	return &this
}

// NewComponentDraftWithDefaults instantiates a new ComponentDraft object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComponentDraftWithDefaults() *ComponentDraft {
	this := ComponentDraft{}
	return &this
}

// GetKey returns the Key field value
func (o *ComponentDraft) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *ComponentDraft) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *ComponentDraft) SetKey(v string) {
	o.Key = v
}

func (o ComponentDraft) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["key"] = o.Key
	}
	return json.Marshal(toSerialize)
}

type NullableComponentDraft struct {
	value *ComponentDraft
	isSet bool
}

func (v NullableComponentDraft) Get() *ComponentDraft {
	return v.value
}

func (v *NullableComponentDraft) Set(val *ComponentDraft) {
	v.value = val
	v.isSet = true
}

func (v NullableComponentDraft) IsSet() bool {
	return v.isSet
}

func (v *NullableComponentDraft) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComponentDraft(val *ComponentDraft) *NullableComponentDraft {
	return &NullableComponentDraft{value: val, isSet: true}
}

func (v NullableComponentDraft) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComponentDraft) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
