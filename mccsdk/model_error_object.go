/*
MACH composer Cloud (MCC) Public API

# Introduction  MACH composer Cloud is a platform and API to facilitate and coordinate work across teams that build composable architectures using MACH technology.   All operations available in MACH composer cloud are available through this API. For more information about using it in your MACH architecture, have a look at the [documentation website](https://docs.machcomposer.io/cloud/index.html).

API version: 0.1.0
Contact: mach@labdigital.nl
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mccsdk

import (
	"encoding/json"
)

// ErrorObject struct for ErrorObject
type ErrorObject struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// NewErrorObject instantiates a new ErrorObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorObject(code string, message string) *ErrorObject {
	this := ErrorObject{}
	this.Code = code
	this.Message = message
	return &this
}

// NewErrorObjectWithDefaults instantiates a new ErrorObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorObjectWithDefaults() *ErrorObject {
	this := ErrorObject{}
	return &this
}

// GetCode returns the Code field value
func (o *ErrorObject) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *ErrorObject) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *ErrorObject) SetCode(v string) {
	o.Code = v
}

// GetMessage returns the Message field value
func (o *ErrorObject) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *ErrorObject) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *ErrorObject) SetMessage(v string) {
	o.Message = v
}

func (o ErrorObject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["code"] = o.Code
	}
	if true {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableErrorObject struct {
	value *ErrorObject
	isSet bool
}

func (v NullableErrorObject) Get() *ErrorObject {
	return v.value
}

func (v *NullableErrorObject) Set(val *ErrorObject) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorObject) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorObject(val *ErrorObject) *NullableErrorObject {
	return &NullableErrorObject{value: val, isSet: true}
}

func (v NullableErrorObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
