/*
MACH composer Cloud (MCC) Public API

# Introduction  MACH composer Cloud is a platform and API to facilitate and coordinate work across teams that build composable architectures using MACH technology.  All operations available in MACH composer cloud are available through this API. For more information about using it in your MACH architecture, have a look at the [documentation website](https://docs.machcomposer.io/cloud/index.html).

API version: 0.1.0
Contact: mach@labdigital.nl
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mccsdk

import (
	"encoding/json"
	"time"
)

// BaseResource struct for BaseResource
type BaseResource struct {
	CreatedAt time.Time `json:"created_at"`
}

// NewBaseResource instantiates a new BaseResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseResource(createdAt time.Time) *BaseResource {
	this := BaseResource{}
	this.CreatedAt = createdAt
	return &this
}

// NewBaseResourceWithDefaults instantiates a new BaseResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseResourceWithDefaults() *BaseResource {
	this := BaseResource{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *BaseResource) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BaseResource) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BaseResource) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o BaseResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableBaseResource struct {
	value *BaseResource
	isSet bool
}

func (v NullableBaseResource) Get() *BaseResource {
	return v.value
}

func (v *NullableBaseResource) Set(val *BaseResource) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseResource) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseResource(val *BaseResource) *NullableBaseResource {
	return &NullableBaseResource{value: val, isSet: true}
}

func (v NullableBaseResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
