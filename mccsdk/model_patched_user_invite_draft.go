/*
MACH composer Cloud (MCC) Public API

# Introduction  MACH composer Cloud is a platform and API to facilitate and coordinate work across teams that build composable architectures using MACH technology.  All operations available in MACH composer cloud are available through this API. For more information about using it in your MACH architecture, have a look at the [documentation website](https://docs.machcomposer.io/cloud/index.html).

API version: 0.1.0
Contact: mach@labdigital.nl
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mccsdk

import (
	"encoding/json"
	"time"
)

// checks if the PatchedUserInviteDraft type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedUserInviteDraft{}

// PatchedUserInviteDraft struct for PatchedUserInviteDraft
type PatchedUserInviteDraft struct {
	AcceptedAt   NullableTime   `json:"accepted_at,omitempty"`
	CreatedBy    *string        `json:"created_by,omitempty"`
	Email        *string        `json:"email,omitempty"`
	Organization *string        `json:"organization,omitempty"`
	Project      NullableString `json:"project,omitempty"`
	Role         *string        `json:"role,omitempty"`
}

// NewPatchedUserInviteDraft instantiates a new PatchedUserInviteDraft object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedUserInviteDraft() *PatchedUserInviteDraft {
	this := PatchedUserInviteDraft{}
	return &this
}

// NewPatchedUserInviteDraftWithDefaults instantiates a new PatchedUserInviteDraft object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedUserInviteDraftWithDefaults() *PatchedUserInviteDraft {
	this := PatchedUserInviteDraft{}
	return &this
}

// GetAcceptedAt returns the AcceptedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedUserInviteDraft) GetAcceptedAt() time.Time {
	if o == nil || IsNil(o.AcceptedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.AcceptedAt.Get()
}

// GetAcceptedAtOk returns a tuple with the AcceptedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedUserInviteDraft) GetAcceptedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.AcceptedAt.Get(), o.AcceptedAt.IsSet()
}

// HasAcceptedAt returns a boolean if a field has been set.
func (o *PatchedUserInviteDraft) HasAcceptedAt() bool {
	if o != nil && o.AcceptedAt.IsSet() {
		return true
	}

	return false
}

// SetAcceptedAt gets a reference to the given NullableTime and assigns it to the AcceptedAt field.
func (o *PatchedUserInviteDraft) SetAcceptedAt(v time.Time) {
	o.AcceptedAt.Set(&v)
}

// SetAcceptedAtNil sets the value for AcceptedAt to be an explicit nil
func (o *PatchedUserInviteDraft) SetAcceptedAtNil() {
	o.AcceptedAt.Set(nil)
}

// UnsetAcceptedAt ensures that no value is present for AcceptedAt, not even an explicit nil
func (o *PatchedUserInviteDraft) UnsetAcceptedAt() {
	o.AcceptedAt.Unset()
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *PatchedUserInviteDraft) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedUserInviteDraft) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *PatchedUserInviteDraft) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *PatchedUserInviteDraft) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *PatchedUserInviteDraft) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedUserInviteDraft) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *PatchedUserInviteDraft) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *PatchedUserInviteDraft) SetEmail(v string) {
	o.Email = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *PatchedUserInviteDraft) GetOrganization() string {
	if o == nil || IsNil(o.Organization) {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedUserInviteDraft) GetOrganizationOk() (*string, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *PatchedUserInviteDraft) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *PatchedUserInviteDraft) SetOrganization(v string) {
	o.Organization = &v
}

// GetProject returns the Project field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedUserInviteDraft) GetProject() string {
	if o == nil || IsNil(o.Project.Get()) {
		var ret string
		return ret
	}
	return *o.Project.Get()
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedUserInviteDraft) GetProjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Project.Get(), o.Project.IsSet()
}

// HasProject returns a boolean if a field has been set.
func (o *PatchedUserInviteDraft) HasProject() bool {
	if o != nil && o.Project.IsSet() {
		return true
	}

	return false
}

// SetProject gets a reference to the given NullableString and assigns it to the Project field.
func (o *PatchedUserInviteDraft) SetProject(v string) {
	o.Project.Set(&v)
}

// SetProjectNil sets the value for Project to be an explicit nil
func (o *PatchedUserInviteDraft) SetProjectNil() {
	o.Project.Set(nil)
}

// UnsetProject ensures that no value is present for Project, not even an explicit nil
func (o *PatchedUserInviteDraft) UnsetProject() {
	o.Project.Unset()
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *PatchedUserInviteDraft) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedUserInviteDraft) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *PatchedUserInviteDraft) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *PatchedUserInviteDraft) SetRole(v string) {
	o.Role = &v
}

func (o PatchedUserInviteDraft) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedUserInviteDraft) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AcceptedAt.IsSet() {
		toSerialize["accepted_at"] = o.AcceptedAt.Get()
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["created_by"] = o.CreatedBy
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	if o.Project.IsSet() {
		toSerialize["project"] = o.Project.Get()
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	return toSerialize, nil
}

type NullablePatchedUserInviteDraft struct {
	value *PatchedUserInviteDraft
	isSet bool
}

func (v NullablePatchedUserInviteDraft) Get() *PatchedUserInviteDraft {
	return v.value
}

func (v *NullablePatchedUserInviteDraft) Set(val *PatchedUserInviteDraft) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedUserInviteDraft) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedUserInviteDraft) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedUserInviteDraft(val *PatchedUserInviteDraft) *NullablePatchedUserInviteDraft {
	return &NullablePatchedUserInviteDraft{value: val, isSet: true}
}

func (v NullablePatchedUserInviteDraft) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedUserInviteDraft) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
