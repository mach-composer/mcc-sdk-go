/*
MACH composer Cloud (MCC) Public API

# Introduction  MACH composer Cloud is a platform and API to facilitate and coordinate work across teams that build composable architectures using MACH technology.  All operations available in MACH composer cloud are available through this API. For more information about using it in your MACH architecture, have a look at the [documentation website](https://docs.machcomposer.io/cloud/index.html).

API version: 0.1.0
Contact: mach@labdigital.nl
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mccsdk

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the OrganizationUserInviteData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationUserInviteData{}

// OrganizationUserInviteData struct for OrganizationUserInviteData
type OrganizationUserInviteData struct {
	Id string `json:"id"`
	// If the invite is still valid. False if the invite expired or was already used.
	Valid        *bool                                  `json:"valid,omitempty"`
	CreatedBy    string                                 `json:"created_by"`
	Organization OrganizationUserInviteDataOrganization `json:"organization"`
}

type _OrganizationUserInviteData OrganizationUserInviteData

// NewOrganizationUserInviteData instantiates a new OrganizationUserInviteData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationUserInviteData(id string, createdBy string, organization OrganizationUserInviteDataOrganization) *OrganizationUserInviteData {
	this := OrganizationUserInviteData{}
	this.Id = id
	this.CreatedBy = createdBy
	this.Organization = organization
	return &this
}

// NewOrganizationUserInviteDataWithDefaults instantiates a new OrganizationUserInviteData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationUserInviteDataWithDefaults() *OrganizationUserInviteData {
	this := OrganizationUserInviteData{}
	return &this
}

// GetId returns the Id field value
func (o *OrganizationUserInviteData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OrganizationUserInviteData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OrganizationUserInviteData) SetId(v string) {
	o.Id = v
}

// GetValid returns the Valid field value if set, zero value otherwise.
func (o *OrganizationUserInviteData) GetValid() bool {
	if o == nil || IsNil(o.Valid) {
		var ret bool
		return ret
	}
	return *o.Valid
}

// GetValidOk returns a tuple with the Valid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUserInviteData) GetValidOk() (*bool, bool) {
	if o == nil || IsNil(o.Valid) {
		return nil, false
	}
	return o.Valid, true
}

// HasValid returns a boolean if a field has been set.
func (o *OrganizationUserInviteData) HasValid() bool {
	if o != nil && !IsNil(o.Valid) {
		return true
	}

	return false
}

// SetValid gets a reference to the given bool and assigns it to the Valid field.
func (o *OrganizationUserInviteData) SetValid(v bool) {
	o.Valid = &v
}

// GetCreatedBy returns the CreatedBy field value
func (o *OrganizationUserInviteData) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *OrganizationUserInviteData) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *OrganizationUserInviteData) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetOrganization returns the Organization field value
func (o *OrganizationUserInviteData) GetOrganization() OrganizationUserInviteDataOrganization {
	if o == nil {
		var ret OrganizationUserInviteDataOrganization
		return ret
	}

	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value
// and a boolean to check if the value has been set.
func (o *OrganizationUserInviteData) GetOrganizationOk() (*OrganizationUserInviteDataOrganization, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Organization, true
}

// SetOrganization sets field value
func (o *OrganizationUserInviteData) SetOrganization(v OrganizationUserInviteDataOrganization) {
	o.Organization = v
}

func (o OrganizationUserInviteData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationUserInviteData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Valid) {
		toSerialize["valid"] = o.Valid
	}
	toSerialize["created_by"] = o.CreatedBy
	toSerialize["organization"] = o.Organization
	return toSerialize, nil
}

func (o *OrganizationUserInviteData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_by",
		"organization",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrganizationUserInviteData := _OrganizationUserInviteData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrganizationUserInviteData)

	if err != nil {
		return err
	}

	*o = OrganizationUserInviteData(varOrganizationUserInviteData)

	return err
}

type NullableOrganizationUserInviteData struct {
	value *OrganizationUserInviteData
	isSet bool
}

func (v NullableOrganizationUserInviteData) Get() *OrganizationUserInviteData {
	return v.value
}

func (v *NullableOrganizationUserInviteData) Set(val *OrganizationUserInviteData) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationUserInviteData) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationUserInviteData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationUserInviteData(val *OrganizationUserInviteData) *NullableOrganizationUserInviteData {
	return &NullableOrganizationUserInviteData{value: val, isSet: true}
}

func (v NullableOrganizationUserInviteData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationUserInviteData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
