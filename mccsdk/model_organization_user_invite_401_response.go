/*
MCC Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mccsdk

import (
	"encoding/json"
)

// OrganizationUserInvite401Response struct for OrganizationUserInvite401Response
type OrganizationUserInvite401Response struct {
	Message string `json:"message"`
}

// NewOrganizationUserInvite401Response instantiates a new OrganizationUserInvite401Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationUserInvite401Response(message string) *OrganizationUserInvite401Response {
	this := OrganizationUserInvite401Response{}
	this.Message = message
	return &this
}

// NewOrganizationUserInvite401ResponseWithDefaults instantiates a new OrganizationUserInvite401Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationUserInvite401ResponseWithDefaults() *OrganizationUserInvite401Response {
	this := OrganizationUserInvite401Response{}
	return &this
}

// GetMessage returns the Message field value
func (o *OrganizationUserInvite401Response) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *OrganizationUserInvite401Response) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *OrganizationUserInvite401Response) SetMessage(v string) {
	o.Message = v
}

func (o OrganizationUserInvite401Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationUserInvite401Response struct {
	value *OrganizationUserInvite401Response
	isSet bool
}

func (v NullableOrganizationUserInvite401Response) Get() *OrganizationUserInvite401Response {
	return v.value
}

func (v *NullableOrganizationUserInvite401Response) Set(val *OrganizationUserInvite401Response) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationUserInvite401Response) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationUserInvite401Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationUserInvite401Response(val *OrganizationUserInvite401Response) *NullableOrganizationUserInvite401Response {
	return &NullableOrganizationUserInvite401Response{value: val, isSet: true}
}

func (v NullableOrganizationUserInvite401Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationUserInvite401Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
